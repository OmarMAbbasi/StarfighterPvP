# [StarfighterPvP](https://starfight-staging.herokuapp.com/

![splash page](https://github.com/OmarMAbbasi/StarfighterPvP/blob/master/frontend/src/style/images/splash.png)

Attention all pilots, man your battlestations! Grab a spaceship and get ready for battle in StarfighterPvp. Challenge your friends, dodge asteroids, collect powerups, and find out if you have what it takes to become an ace pilot in this arcade-style game!

## Features
StarfighterPvP comes equipped with everything you will need for an exciting, action-packed, multiplayer space adventure.

* #### Web sockets, which allow for the creation of rooms, where you can invite your friends to play or join a friend's room
* #### Live chat allows for spaceship to spaceship transmission
* #### Powerups, wich players can select at the end of each round, which can help (or hurt) themselves and opponents
* #### Arcade aesthetics, from the graphics to the music. Game music is Interplanetary Odyssey by [Patrick de Arteaga(https://patrickdearteaga.com/arcade-music/) and game images from [Master484](http://m484games.ucoz.com/)
* #### High score list shown at the end of a game. Do you have what it takes to get to the top?

## Requirements
* Node.js
* Express.js
* Axios
* MongoDb

## Run StarfighterPvP locally:
1. Clone github repo

2. Install the dependencies and packages (note: you will need to do npm install in both the root and frontend directories):
  ```
  npm install
  ```
   
 3. Activate the server:
 ```
 npm run dev
 ```
 
 4. Navigate to localhost:3000 in your browser
 
 5. Start using StarfighterPvP
 
## About the Project
An eageer group of four software engineers designed and built StarfighterPvP over five days. A proposal was drafted, which included a database schema, a sample-state, timeline, and frontend and backend routes. The work was equally divided and the timeline was systematically followed from start to finish, to create an exciting and playable game.

![starfighter](https://github.com/OmarMAbbasi/StarfighterPvP/blob/master/frontend/src/style/images/redshipfire.png)

## The Technology
### Backend
StarfighterPvP is a MERN stack game. The backend is built with MongoDb and Express.js. Backend-frontend integration is achieved through axios. We used Socket.io to create web sockets that allowed for multiplayer.

#### Session Management
Creating or joining a game is as easy as a mouse click. Gamers have the option to join a demo room and test the game out themselves, or they can create a room or join a friends room. The database stores player nicknames and scores to create a high score list shown at the end of games.

Here is a snipped from the Player model:

```javascript
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const PlayerSchema = new Schema({
    tag: {
        type: String,
        required: true
    },
    score: {
        type: Number,
        required: true
    },
    date: {
        type: Date,
        default: Date.now
    }
});
```

We built web sockets, allowing for multiplayer functionality, with the following code on the backend:

```javascript
	socket.on("joinRoom", data => {
		console.log(data);
		socket.id = Math.random();
		let game = null;
		if (data.type === "createRoom") {
			game = ROOM_LIST[data.roomId] = new Game(data.roomId, socket.id);
			game.startGame();
		} else {
			game = ROOM_LIST[data.roomId];
		}
		let player = game.addPlayer(socket.id, socket, data.userTag, data.roomId);
		if (player) {
			PLAYER_LIST[socket.id] = player;
		} else {
			socket.emit("roomFull", false);
		}
	});

	socket.on("playerInput", data => {
		player = PLAYER_LIST[socket.id];
		player.setInputs(data);
		// console.log(data);
	});
```

This code allows for the creation of rooms, which players can invite their friends to joinm, as well as the joining of rooms. The game can manage multiple multiplayer games at once.

### Frontend
